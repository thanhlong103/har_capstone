#DOCKER 

docker pull ghcr.io/sloretz/ros:humble-desktop
docker build -t ros2_humble_custom .
docker run -it --volume /home/ntlong/har_capstone/turtlebot3_ws/:/root/ros2_ws --network host --device=/dev/ttyACM0 --device=/dev/ttyUSB0 --rm ros2_foxy_opencv_3.4.12
docker exec -it b83c8f477b87 bash

#Launch Robot
*Bringup
ros2 launch turtlebot3_bringup robot.launch.py

*Teleop
ros2 run turtlebot3_teleop teleop_keyboard

*Flash Firmware for OpenCR

./update.sh $OPENCR_PORT $OPENCR_MODEL.opencr

*slam_toolbox
ros2 launch slam_toolbox online_async_launch.py

*MAPPING
ros2 launch turtlebot3_cartographer cartographer.launch.py

*Save map
ros2 run nav2_map_server map_saver_cli -f map_name

*Lidar
cd /home/ntlong/har_capstone/lidar_ws && source install/setup.bash && ros2 launch ldlidar_stl_ros2 ld19.launch.py

*Nav2
cd /home/ntlong/har_capstone/turtlebot3_ws && source install/setup.bash/ && ros2 launch turtlebot3_navigation2 navigation2.launch.py map:=map_name.yaml

#LAUNCH MONITOR UI
ros2 launch rosbridge_server rosbridge_websocket_launch.xml
cd /home/ntlong/har_capstone/monitor-ui && npm start

#CAMERA
*Run in tf virtual environment
source tf/bin/activate
